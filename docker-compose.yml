version: '3'
services:
  web:
    image: nginx:alpine
    volumes:
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./:/var/www/html"
      - "./docker/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - php
      - mysqldb
  php:
    image: nanoninja/php-fpm:${PHP_VERSION}
    restart: always
    volumes:
      - "./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - ".:/var/www/html"
  composer:
    image: "composer"
    volumes:
      - ".:/app"
    command: install --ignore-platform-reqs
  myadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
    restart: always
    depends_on:
      - mysqldb
  mysqldb:
    image: mysql:${MYSQL_VERSION}
    restart: always
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
      - "8989:3306"
    volumes:
      - "./storage/db/mysql:/var/lib/mysql"
  node:
    image: node:11.9.0
    restart: on-failure
    volumes:
      - .:/app:rw
    working_dir: /app
    command: npm install
